'''
python module学习笔记
1. Python 模块(Module)，是一个 Python 文件，以 .py 结尾，包含了 Python 对象定义和Python语句。
2. 把相关的代码分配到一个模块里能让你的代码更好用，更易懂。
3. 模块能定义函数，类和变量，模块里也能包含可执行的代码。
4. 一个模块只会被导入一次，不管你执行了多少次import。这样可以防止导入模块被一遍又一遍地执行

5. 导入方式：
5.1 import module1[, module2[,... moduleN]]
5.2 from modname import name1[, name2[, ... nameN]] - 导入指定空间的内容
5.3 当一个模块被导入到一个脚本，模块顶层部分的代码只会被执行一次。如果你想重新执行模块里顶层部分的代码，可以用 reload() 函数。该函数会重新导入之前导入过的模块

6. 导入一个模块，Python 解析器对模块位置的搜索顺序是
6.1、当前目录
6.2、如果不在当前目录，Python 则搜索在 shell 变量 PYTHONPATH 下的每个目录。
6.3、如果都找不到，Python会察看默认路径。UNIX下，默认路径一般为/usr/local/lib/python/

7. 全局变量和局部变量
7.1 Python 会智能地猜测一个变量是局部的还是全局的，它假设任何在函数内赋值的变量都是局部的。
7.2 如果要给函数内的全局变量赋值，必须使用 global 语句。
    global VarName

8. Python中的包
8.1 包是一个分层次的文件目录结构，它定义了一个由模块及子包，和子包下的子包等组成的 Python 的应用环境
8.2 简单来说，包就是文件夹，但该文件夹下必须存在 __init__.py 文件, 该文件的内容可以为空。__init__.py 用于标识当前文件夹是一个包
'''
if __name__ == '__main__':
    print("作为主程序运行")
else:
    print("初始化")